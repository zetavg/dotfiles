# .zshrc

##
# General
##

setopt PROMPT_SUBST  # enable prompt expansions
export CLICOLOR=1

WORDCHARS='_'


##
# Append fpath
##

if [[ -d $HOME/.zsh/functions ]]; then
  fpath=($fpath $HOME/.zsh/functions)
fi

if [[ -d $HOME/.zsh/completions ]]; then
  fpath=($fpath $HOME/.zsh/completions)
fi

if type brew &>/dev/null; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi


##
# History
##

HISTSIZE=50000   # number of histories the shell will keep within one session
SAVEHIST=100000  # the number of lines of history to save

HISTFILE=$HOME/.zhistory

setopt APPEND_HISTORY          # append history list to the history file, rather than replace it
setopt HIST_EXPIRE_DUPS_FIRST  # drop duplicate histories first when hitting the history size limit
setopt EXTENDED_HISTORY        # save each command’s beginning timestamp and duration to history
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY      # append entries to the history file as soon as they are entered
setopt SHARE_HISTORY


##
# Zinit
##

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Workaround for zinit issue#504: remove subversion dependency. Function clones all files in plugin
# directory (on github) that might be useful to zinit snippet directory. Should only be invoked
# via zinit atclone"_fix-omz-plugin"
# From: https://github.com/zdharma-continuum/zinit/discussions/651#discussioncomment-11442498
_fix-omz-plugin() {
    [[ -f ./._zinit/teleid ]] || return 1
    local teleid="$(<./._zinit/teleid)"
    local pluginid
    for pluginid (${teleid#OMZ::plugins/} ${teleid#OMZP::}) {
        [[ $pluginid != $teleid ]] && break
    }
    (($?)) && return 1
    print "Fixing $teleid..."
    git clone --quiet --no-checkout --depth=1 --filter=tree:0 https://github.com/ohmyzsh/ohmyzsh
    cd ./ohmyzsh
    git sparse-checkout set --no-cone /plugins/$pluginid
    git checkout --quiet
    cd ..
    local file
    for file (./ohmyzsh/plugins/$pluginid/*~(.gitignore|*.plugin.zsh)(D)) {
        print "Copying ${file:t}..."
        cp -R $file ./${file:t}
    }
    rm -rf ./ohmyzsh
}

# This is needed if we source `zinit.zsh` after `compinit`
# autoload -Uz _zinit
# (( ${+_comps} )) && _comps[zinit]=_zinit

# Load pure theme


##
# Enable prompt
##

[[ "$SSH_CONNECTION" != '' ]] && PURE_PROMPT_SYMBOL='⋯❯' || PURE_PROMPT_SYMBOL='❯'
zinit ice pick"async.zsh" src"pure.zsh" # with zsh-async library that's bundled with it.
zinit light sindresorhus/pure
zstyle ':prompt:pure:git:dirty' color 242
precmd_functions+=(precmd_postprocessing)
precmd_postprocessing() {
  # Hide if using default environments
  if [[ $psvar[12] == "base" ]]; then
    psvar[12]=
  fi

  # If $psvar[12] is not blank and starts with current dir, strip it
  if [[ -n $psvar[12] ]]; then
    if [[ $psvar[12] == /* ]]; then
      # Show relative path as it will be shorter in most cases
      local rel_path="${psvar[12]#${PWD}/}"
      if [[ -n $rel_path && $rel_path != $psvar[12] ]]; then
        rel_path="./${rel_path}"
      fi

      if [[ -n $rel_path ]]; then
        psvar[12]="${rel_path}"
      fi
    fi
  fi
}

# Load plugins
# zinit light mafredri/zsh-async # we are using zsh-async library bundled with the pure theme instead
zinit light zdharma/fast-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-history-substring-search
zinit light psprint/zsh-navigation-tools
zinit light zdharma/history-search-multi-word
zinit light jreese/zsh-titles
zinit light paulirish/git-open
zinit light conda-incubator/conda-zsh-completion

zinit wait lucid atpull"%atclone" atclone"_fix-omz-plugin" for OMZ::plugins/gitfast


##
# Completions
##

autoload -U compinit && compinit
zstyle ':completion:*' menu select


##
# zsh-users/zsh-history-substring-search
##

HISTORY_SUBSTRING_SEARCH_FUZZY=true          # "ab c" will match "*ab*c*""
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=true  # only return unique search results

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down


##
# zdharma/fast-syntax-highlighting
##

FAST_HIGHLIGHT_STYLES[unknown-token]='fg=red'


##
# mise
##

if type mise &>/dev/null; then
  eval "$(mise activate zsh)"
fi


##
# Load Shared Profile
##

. "$HOME/.shell_profile"
